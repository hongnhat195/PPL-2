Program([
	VarDecl(n, FloatType, BinExpr(+, Id(a), IntegerLit(1)))
	VarDecl(a, BooleanType)
	VarDecl(b, BooleanType)
	VarDecl(c, BooleanType)
	VarDecl(p, IntegerType, IntegerLit(1))
	VarDecl(q, IntegerType, IntegerLit(2))
	VarDecl(arrayA, ArrayType([4], IntegerType), ArrayLit([IntegerLit(1), IntegerLit(2), IntegerLit(3), IntegerLit(4)]))
	VarDecl(arr2, ArrayType([2, 3], FloatType), ArrayLit([ArrayLit([FloatLit(3e-35), IntegerLit(2), FloatLit(1.52)]), ArrayLit([FloatLit(1.23e-11), FloatLit(0.05), FloatLit(6.22)])]))
	FuncDecl(empty_function123_263827, VoidType, [Param(test, BooleanType), Param(test_array, ArrayType([4, 7, 8], IntegerType))], None, BlockStmt([]))
	FuncDecl(main, VoidType, [], None, BlockStmt([AssignStmt(Id(x), BinExpr(+, FuncCall(a, []), BinExpr(*, FuncCall(b, []), FuncCall(c, [Id(d)])))), IfStmt(BinExpr(<, Id(x), FuncCall(a, [ArrayCell(arr, [IntegerLit(0), Id(i)])])), ReturnStmt()), AssignStmt(Id(x), BinExpr(/, Id(x), FuncCall(max, [Id(x), BinExpr(+, Id(y), FuncCall(sub, [BinExpr(-, Id(x), Id(y))]))]))), ForStmt(AssignStmt(Id(i), IntegerLit(1)), BinExpr(<, Id(i), Id(n)), BinExpr(/, Id(i), IntegerLit(2)), BlockStmt([BlockStmt([VarDecl(k, IntegerType, IntegerLit(0)), AssignStmt(Id(k), Id(i)), IfStmt(BinExpr(<, Id(k), IntegerLit(10)), BreakStmt())])])), CallStmt(print, StringLit(The result is ), Id(x))]))
	FuncDecl(func, FloatType, [OutParam(animal, StringType), Param(num, IntegerType)], None, BlockStmt([AssignStmt(Id(animal), StringLit(this is a string)), VarDecl(i, IntegerType), VarDecl(j, IntegerType), VarDecl(ans, IntegerType), VarDecl(n, IntegerType), AssignStmt(Id(n), IntegerLit(10)), ForStmt(AssignStmt(Id(i), IntegerLit(1)), BinExpr(<=, Id(i), Id(n)), BinExpr(+, Id(i), IntegerLit(1)), ForStmt(AssignStmt(Id(j), Id(n)), BinExpr(<, Id(j), Id(i)), BinExpr(-, Id(j), IntegerLit(1)), BlockStmt([AssignStmt(Id(ans), BinExpr(+, Id(ans), BinExpr(*, BinExpr(*, Id(i), Id(j)), ArrayCell(arrayA, [Id(i)]))))]))), ReturnStmt(Id(ans))]))
	FuncDecl(Car, VoidType, [Param(a, FloatType), Param(b, IntegerType), OutParam(c, FloatType)], None, BlockStmt([ForStmt(AssignStmt(Id(i), IntegerLit(1)), BinExpr(<=, Id(i), Id(n)), BinExpr(+, Id(i), IntegerLit(1)), IfStmt(BinExpr(==, Id(i), IntegerLit(2)), ContinueStmt(), AssignStmt(Id(c), ArrayCell(a, [BinExpr(+, Id(c), IntegerLit(1))])))), WhileStmt(BooleanLit(False), BlockStmt([IfStmt(BinExpr(>=, Id(j), IntegerLit(5)), BreakStmt()), AssignStmt(Id(s), FuncCall(add, [IntegerLit(2), IntegerLit(3), IntegerLit(4), IntegerLit(5)])), CallStmt(printInteger, Id(s))])), ReturnStmt(Id(ans))]))
	FuncDecl(Vinfast, VoidType, [InheritParam(b, IntegerType)], Car, BlockStmt([CallStmt(runStraight, Id(number), Id(vecl), Id(auto_stmt)), DoWhileStmt(BinExpr(>, Id(a), IntegerLit(0)), BlockStmt([AssignStmt(Id(a), BinExpr(-, Id(a), IntegerLit(1))), CallStmt(printInteger, Id(a))]))]))
])